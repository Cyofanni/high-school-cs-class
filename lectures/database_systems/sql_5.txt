*** SQL - 5 ***

*LEFT JOIN, RIGHT JOIN*
 - Considerare il database 'serie_a'
 - Considerare il contenuto delle tabelle 'teams' e 'players':

teams
+----+----------+------------+----------------+--------------+--------+
| id | name     | date_est   | revenue        | new_promoted | colour |
+----+----------+------------+----------------+--------------+--------+
|  4 | J.       | 1898-11-01 |  99999931.0000 |            0 | white  |
|  5 | I.       | 1899-11-01 | 100999931.0000 |            0 | blue   |
|  6 | M.       | 1901-03-02 |  80999931.0000 |            0 | red    |
|  7 | R.       | 1927-09-22 |    654623.0000 |            0 | red    |
+----+----------+------------+----------------+--------------+--------+

players
+----+------------+----------+------------+------------+-----------+------+
| id | name       | surname  | birthdate  | salary     | country   | team |
+----+------------+----------+------------+------------+-----------+------+
|  8 | F.         | C.       | 1997-03-02 |  100000.00 | Italy     |    4 |
| 10 | K.         | Y.       | 2005-04-01 |   10000.00 | Germany   |    4 |
| 12 | L.         | M.       | 1997-10-13 | 7000000.00 | Argentina |    5 |
| 13 | A.         | B.       | 1999-04-13 | 4000000.00 | Italy     |    5 |
| 14 | R.         | L.       | 1999-06-10 | 4000000.00 | Portugal  |    6 |
| 15 | O.         | G.       | 1986-06-10 | 3000000.00 | France    |    6 |
| 17 | A.         | M.       | 2003-05-03 |       NULL | Italy     |    4 |
| 18 | M.         | R.       | 1995-05-03 |       NULL | Italy     | NULL |
+----+------------+----------+------------+------------+-----------+------+

 - Come si può notare, esiste una squadra ('R.') nella quale non milita alcun
   calciatore. Inoltre, esiste un calciatore svincolato ("M. R.")
 - Lanciare questa query:
    SELECT players.name AS player_name, players.surname AS player_surname, teams.name AS team_name
    FROM players LEFT JOIN teams ON players.team = teams.id;
  
   l'output è il seguente:
+-------------+----------------+-----------+
| player_name | player_surname | team_name |
+-------------+----------------+-----------+
| F.          | C.             | J.        |
| K.          | Y.             | J.        |
| L.          | M.             | I.        |
| A.          | B.             | I.        |
| R.          | L.             | M.        |
| O.          | G.             | M.        |
| A.          | M.             | J.        |
| M.          | R.             | NULL      |
+-------------+----------------+-----------+

 - L'operazione effettuata dalla query precedente è detta LEFT JOIN (o 
   LEFT OUTER JOIN).
   Si tratta di una JOIN nella quale vengono mantenuti tutti i record della tabella
   a sinistra (in questo caso 'players'), e soltanto i record che rispettano la condizione
   della clausola ON della tabella a destra (in questo caso 'teams')
 - Sintassi alternativa:
    1) SELECT players.name AS player_name, players.surname AS player_surname, teams.name AS team_name
       FROM players LEFT OUTER JOIN teams ON players.team = teams.id;


*Esercizio*
 - Spiegare il funzionamento della query seguente:
    SELECT players.name AS player_name, players.surname AS player_surname, teams.name AS team_name
    FROM players RIGHT OUTER JOIN teams ON players.team = teams.id;