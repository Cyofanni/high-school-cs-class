*** SQL - 7 ***

*GROUP BY*
 - Considerare questa tabella:

people
+----+----------+----------+---------+
| id | name     | surname  | city    |
+----+----------+----------+---------+
|  9 | maria    | verdi    | torino  |
| 10 | mario    | rossi    | vicenza |
| 11 | giovanni | bianchi  | milano  |
| 12 | giovanna | rossini  | roma    |
| 13 | alberto  | neri     | torino  |
| 14 | giuseppe | rosselli | vicenza |
| 15 | giovanni | bianchi  | milano  |
| 16 | bianca   | rossi    | roma    |
| 17 | alberto  | neri     | torino  |
| 18 | giovanni | rosselli | milano  |
| 19 | giovanni | bianchi  | milano  |
| 20 | bianca   | rossi    | roma    |
+----+----------+----------+---------+

 - Lanciare la query seguente e spiegarne l'output:
   
    SELECT city, COUNT(*) FROM people GROUP BY city;
   
   output:
    +---------+----------+
    | city    | COUNT(*) |
    +---------+----------+
    | torino  |        3 |
    | vicenza |        2 |
    | milano  |        4 |
    | roma    |        3 |
    +---------+----------+

 - "GROUP BY attr" raggruppa i record che condividono lo stesso valore
   per l'attributo "attr"; viene spesso utilizzata con le funzioni di
   aggregazione (MAX, MIN, AVG, COUNT)
 

*Esercizio*
 - Considerare questa tabella:

people
+----+-----------+----------+---------+-----------+
| id | name      | surname  | city    | salary    |
+----+-----------+----------+---------+-----------+
|  9 | maria     | verdi    | torino  | 1000.0000 |
| 10 | mario     | rossi    | vicenza | 8000.0000 |
| 11 | giovanni  | bianchi  | milano  | 4000.0000 |
| 12 | giovanna  | rossini  | roma    | 6500.0000 |
| 13 | alberto   | neri     | torino  | 7500.0000 |
| 14 | giuseppe  | rosselli | vicenza | 2500.0000 |
| 15 | giovanni  | bianchi  | milano  | 8500.0000 |
| 16 | bianca    | rossi    | roma    | 1500.0000 |
| 17 | alberto   | neri     | torino  | 3500.0000 |
| 18 | giovanni  | rosselli | milano  |      NULL |
| 19 | giovanni  | bianchi  | milano  | 2500.0000 |
| 20 | bianca    | rossi    | roma    | 3500.0000 |
| 21 | francesca | neri     | NULL    |      NULL |
+----+-----------+----------+---------+-----------+

  a) scrivere una query che estrae il valore dello stipendio massimo
     per ciascuna citt√†; l'output deve essere il seguente:
     
+---------+-----------------+
| city    | max_city_salary |
+---------+-----------------+
| torino  |       7500.0000 |
| vicenza |       8000.0000 |
| milano  |       8500.0000 |
| roma    |       6500.0000 |
| NULL    |            NULL |
+---------+-----------------+

  b) in seguito, modificare la query per escludere il record (NULL, NULL);
     NB: per effettuare confronti con NULL non si utilizzano gli operatori = e <>,
     ma IS e IS NOT (e.g. SELECT * FROM people WHERE city IS NOT NULL)
