*** SQL - 2 ***

*Foreign keys*
 - CREATE DATABASE serie_a;
 - USE serie_a;
 - CREATE TABLE teams(
      id INT AUTO_INCREMENT,
      name VARCHAR(20) NOT NULL,
      date_est DATE,
      revenue DECIMAL(20, 4) NOT NULL,
      new_promoted BOOL,
      colour ENUM('red', 'white', 'green', 'black', 'yellow', 'blue'),
      PRIMARY KEY(id)
   );
    * ENUM permette di creare un tipo enumerazione: i valori possibili
      di 'colour' saranno 'red', 'white', 'green', 'black', 'yellow', 'blue'
 - ALTER TABLE teams MODIFY new_promoted BOOL NOT NULL;
    * aggiunge il vincolo 'NOT NULL' all'attributo 'new_promoted'
 - CREATE TABLE players(
      id INT AUTO_INCREMENT,
      name VARCHAR(20) NOT NULL,
      surname VARCHAR(20) NOT NULL,
      birthdate DATE NOT NULL,
      salary DECIMAL(12, 2),
      country VARCHAR(20) NOT NULL,
      team INT,
      PRIMARY KEY(id),
      FOREIGN KEY(team) REFERENCES teams(id)
   );
    * 'team' è chiave esterna di 'players'. Si riferisce alla chiave primaria della tabella
      'teams' ('id')
 - Le 2 tabelle precedenti traducono l'associazione 1:N esprimibile nel modo seguente:
   "un giocatore gioca in min 0, max 1 squadra; in una squadra giocano min 0, max N
    giocatori"


*Esercizi*
 - Inserire alcune squadre nella tabella 'teams'
 - Inserire alcuni giocatori nella tabella 'players'
 - Effettuare alcune operazioni di cancellazione e aggiornamento
   e verificare il rispetto del vincolo di integrità referenziale